version: '2.2'
services:

  nginx:
    depends_on:
      - validator
      - ui
      - core
    restart: always
    container_name: validatornginx
    build: nginx
    volumes:
      - /data/esva/ssl_certs:/etc/nginx/certs/:ro
    env_file: 
      - /data/esva/validator/.env
    ports:
      - "443:443"
    networks:
      - proxynet

  validator:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: esvavalidator
    networks:
      - my-proxy-net
    volumes:
      - /data/esva/ewp_certs:/app/certificates:rw
      - /data/esva/validator/.env:/app/.env:ro
    restart: always

  ui: 
    build: 
      context: ./validador/ui/
      dockerfile: ./repo/Dockerfile
    image: validador-ui 
    container_name: validador-ui 
    hostname: validador-ui 
    restart: unless-stopped 
    volumes: 
      - ./validador/core/data/validations:/usr/share/nginx/html/validations 
      - /data/esva/validator/.env:/app/.env:ro
    networks:
      - my-proxy-net

  core: 
    build: ./validador/core/repo
    image: validador-core 
    container_name: validador-core 
    hostname: validador-core 
    restart: unless-stopped 
    env_file: 
      - /data/esva/validator/.env
    volumes: 
      -  ./validador/core/configs:/app/repo/code/config
      -  ./validador/core/store:/app/store 
      -  ./validador/core/logs:/app/logs 
      -  ./validador/core/data:/app/data
    networks:
      my-proxy-net:
        aliases:
         - ${HOST}
         - 'validador-core'
    
networks:
  proxynet:
    name: custom_network
  my-proxy-net:
    external:
      name: custom_network